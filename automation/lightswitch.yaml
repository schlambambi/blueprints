blueprint:
  name: Motion Light Tutorial
  description: Turn a light on based on detected motion
  domain: automation
  input:
    light_controll: 
      name: Remote
      selector:
        entity:
          domain: sensor
    light_device:
      name: Bulb
      selector:
        entity:
          domain: light
trigger:
  - platform: state
    entity_id:
      - !input light_controll
condition: []
action:
  - variables:
      command: "{{ trigger.to_state.state }}"
      bulb: !input light_device
  - choose:
      - conditions:
          - "{{ command == 'on' }}"
        sequence:
          - service: light.turn_on
            target:
              entity_id: bulb        
      - conditions:
          - "{{ command == 'off' }}"
        sequence:
          - service: light.turn_off
            target:
              entity_id: bulb 
      - conditions:
          - "{{ command == 'brightness_move_up' }}"
        sequence:
          - service: light.turn_on
            entity_id: bulb
            data_template:
              brightness: >-
                {{ state_attr('bulb','brightness')|int + 15}}
      - conditions:
          - "{{ command == 'brightness_move_down' }}"
        sequence:
          - service: light.turn_on
            entity_id: bulb
            data_template:
              brightness: >-
                {{ state_attr('bulb','brightness')|int + 15}}
      - conditions:
          - "{{ command == 'arrow_left_click' }}"
        sequence:
          - service: light.turn_on
            entity_id: bulb
            data_template:
              color_temp_kelvin: >-
                {{ state_attr('bulb','color_temp_kelvin')|int + 150}}
      - conditions:
          - "{{ command == 'arrow_right_click' }}"
        sequence:
          - service: light.turn_on
            entity_id: bulb
            data_template:
              color_temp_kelvin: >-
                {{ state_attr('bulb','color_temp_kelvin')|int - 150}}
mode: single
